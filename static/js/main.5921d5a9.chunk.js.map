{"version":3,"sources":["components/Notification/index.jsx","components/Statistics/index.jsx","components/FeedbackOptions/index.jsx","components/Section/index.jsx","App.jsx","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/Feedback.module.css"],"names":["Notification","text","Statistics","good","neutral","bad","total","Percentage","className","styles","FeedbackOptions","options","onLeaveFeedback","map","option","button","type","onClick","Section","title","children","App","state","addressFeedback","setState","prevState","countTotalFeedback","Object","values","reduce","acc","value","countPositiveFeedbackPercentage","Math","round","this","keys","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"4PAQeA,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAAc,4BAAIA,K,gBC0BxBC,EAxBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,WAA9B,OACjB,qBAAKC,UAAWC,IAAOP,WAAvB,SACGI,EAAQ,EACP,qCACE,0CAAaH,KACb,6CAAgBC,KAChB,yCAAYC,KACZ,2CAAcC,KACd,uDAA0BC,EAA1B,UAGF,cAAC,EAAD,CAAcN,KAAK,yB,gBCYVS,EAxBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAEX,OACE,wBAAQN,UAAWC,IAAOM,OAExBC,KAAK,SACLC,QALoB,kBAAML,EAAgBE,IAE5C,SAKGA,GAJIA,SCIFI,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,gCACE,mCAAMD,KACLC,MCiDUC,E,4MA/CbC,MAAQ,CACNnB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPkB,gBAAkB,SAAAT,GAChB,EAAKU,UAAS,SAAAC,GAAS,sBACpBX,EAASW,EAAUX,GAAU,O,EAIlCY,mBAAqB,WAEnB,OADeC,OAAOC,OAAO,EAAKN,OACpBO,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,I,EAGpDC,gCAAkC,kBAChCC,KAAKC,MAAO,EAAKZ,MAAMnB,KAAO,EAAKuB,qBAAwB,M,4CAE7D,WAAU,IAAD,EACwBS,KAAKb,MAA5BnB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjB+B,EAAOT,OAAOS,KAAKD,KAAKb,OAE9B,OACE,gCACE,cAAC,EAAD,CAASH,MAAM,wBAAf,SACE,cAAC,EAAD,CACER,QAASyB,EACTxB,gBAAiBuB,KAAKZ,oBAI1B,cAAC,EAAD,CAASJ,MAAM,aAAf,SACE,cAAC,EAAD,CACEhB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO6B,KAAKT,qBACZnB,WAAY4B,KAAKH,6C,GAxCXK,a,MCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,WAAa,iC,kBCA/BD,EAAOC,QAAU,CAAC,OAAS,4B","file":"static/js/main.5921d5a9.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ text }) => <p>{text}</p>;\r\n\r\nNotification.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import PropTypes from 'prop-types';\r\nimport Notification from '../Notification';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, Percentage }) => (\r\n  <div className={styles.Statistics}>\r\n    {total > 0 ? (\r\n      <>\r\n        <span>Good: {good}</span>\r\n        <span>Neutral: {neutral}</span>\r\n        <span>Bad: {bad}</span>\r\n        <span>Total: {total}</span>\r\n        <span>Positive feedback: {Percentage}%</span>\r\n      </>\r\n    ) : (\r\n      <Notification text=\"No feedback given\" />\r\n    )}\r\n  </div>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  Percentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\nimport styles from './Feedback.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      {options.map(option => {\r\n        const addressFeedback = () => onLeaveFeedback(option);\r\n        return (\r\n          <button className={styles.button}\r\n            key={option}\r\n            type=\"button\"\r\n            onClick={addressFeedback}\r\n          >\r\n            {option}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div>\r\n    <h1> {title}</h1>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;","import React, { Component } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\n\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  addressFeedback = option => {\n    this.setState(prevState => ({\n      [option]: prevState[option] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const values = Object.values(this.state);\n    return values.reduce((acc, value) => acc + value, 0);\n  };\n\n  countPositiveFeedbackPercentage = () =>\n    Math.round((this.state.good / this.countTotalFeedback()) * 100);\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const keys = Object.keys(this.state);\n\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={keys}\n            onLeaveFeedback={this.addressFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            Percentage={this.countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Statistics\":\"Statistics_Statistics__2zNzD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Feedback_button__29K7v\"};"],"sourceRoot":""}